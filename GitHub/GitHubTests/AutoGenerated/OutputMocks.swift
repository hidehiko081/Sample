///
/// @Generated by Mockolo
///



import Alamofire
import Foundation
import RealmSwift
import UIKit
@testable import GitHub


class UsersViewProtocolMock: UsersViewProtocol {
    init() { }
    init(isSearchControllerActived: Bool = false) {
        self.isSearchControllerActived = isSearchControllerActived
    }


    private(set) var isSearchControllerActivedSetCallCount = 0
    var isSearchControllerActived: Bool = false { didSet { isSearchControllerActivedSetCallCount += 1 } }

    private(set) var reloadDataCallCount = 0
    var reloadDataHandler: (() -> ())?
    func reloadData()  {
        reloadDataCallCount += 1
        if let reloadDataHandler = reloadDataHandler {
            reloadDataHandler()
        }
        
    }
}

class NewUsersRepositoryMock: NewUsersRepository {
    init() { }


    private(set) var requestUsersCallCount = 0
    var requestUsersHandler: ((Int, @escaping (_ models: [UserModel]) -> Void) -> ())?
    func requestUsers(userId: Int, completionHandler: @escaping (_ models: [UserModel]) -> Void)  {
        requestUsersCallCount += 1
        if let requestUsersHandler = requestUsersHandler {
            requestUsersHandler(userId, completionHandler)
        }
        
    }
}

class UsersRemoteDataSourceMock: UsersRemoteDataSource {
    init() { }


    private(set) var requestUsersCallCount = 0
    var requestUsersHandler: ((Int, @escaping (_ models: [UserModel]) -> Void) -> ())?
    func requestUsers(userId: Int, completionHandler: @escaping (_ models: [UserModel]) -> Void)  {
        requestUsersCallCount += 1
        if let requestUsersHandler = requestUsersHandler {
            requestUsersHandler(userId, completionHandler)
        }
        
    }
}

